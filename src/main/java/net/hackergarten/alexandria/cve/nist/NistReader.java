package net.hackergarten.alexandria.cve.nist;

import lombok.extern.slf4j.Slf4j;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.stereotype.Service;

import java.nio.file.Files;
import java.nio.file.Paths;

@Service
@Slf4j
public class NistReader {

    public NistReader() {
        try {
            String text = new String(Files.readAllBytes(Paths.get("C:\\Users\\FabianLemke\\git\\maven-cve-resolver\\2000-last.json")));

            JSONObject obj = new JSONObject(text);
            JSONArray arr = obj.getJSONArray("vulnerabilities");

            for(int i = 0; i < arr.length(); i++){

//                String name = arr.getJSONObject(i).getString("name");
//                short salary = Short.parseShort(arr.getJSONObject(i).getString("salary"));
//                String position = arr.getJSONObject(i).getString("position");
//                byte years_in_company = Byte.parseByte(arr.getJSONObject(i).getString("years_in_company"));
//                if (position.compareToIgnoreCase("manager") == 0){
//                    result.add(new Manager(name, salary, position, years_in_company));
//                }
//                else{
//                    result.add(new OrdinaryEmployee(name, salary, position, years_in_company));
//                }
            }
        } catch (Exception e) {
            log.error(e.getMessage());
        }
    }
}
